<?php

namespace Phramework\Validate;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-10-05 at 22:11:07.
 */
class BooleanTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Boolean
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Boolean;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    public function validateSuccessProvider()
    {
        //input, expected
        return [
            [1, true],
            ['1', true],
            [true, true],
            ['true', true],
            ['TRUE', true],
            ['yes', true],
            ['on', true],
            [0, false],
            ['0', false],
            [false, false],
            ['false', false],
            ['FALSE', false],
            ['no', false],
            ['off', false]
        ];
    }

    public function validateFailureProvider()
    {
        //input
        return [
            ['100'],
            ['01'],
            [10],
            [-1],
            [124],
            ['τρθε'],
            ['positive'],
            ['negative']
        ];
    }

    /**
     * @dataProvider validateSuccessProvider
     * @covers Phramework\Validate\Boolean::validate
     */
    public function testValidateSuccess($input, $expected)
    {
        $return = $this->object->validate($input);

        $this->assertInternalType('boolean', $return->value);
        $this->assertEquals($expected, $return->value);
        $this->assertTrue($return->status);
    }

    /**
     * @dataProvider validateFailureProvider
     * @covers Phramework\Validate\Boolean::validate
     */
    public function testValidateFailure($input)
    {
        $return = $this->object->validate($input);

        $this->assertEquals(false, $return->status);
    }

    /**
     * @covers Phramework\Validate\Boolean::getType
     */
    public function testGetType()
    {
        $this->assertEquals('boolean', $this->object->getType());
    }
}
