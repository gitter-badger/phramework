<?php

namespace Phramework\Validate;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-10-05 at 20:04:03.
 */
class IntegerTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Integer
     */
    protected $object;
    

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Integer(-1000,1000);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }
    
    public function validateSuccessProvider()
    {   
        //input, expected
        return [
            ['100', 100],
            [124, 124],
            [0, 0],
            [-10, -10],
            [-99, -99]
        ];
    }
    
    public function validateFailureProvider()
    {   
        //input
        return [
            ['-0x'],
            ['abc'],
            ['+xyz'],
            ['++30'],
            [-10000000],
            [10000000],
            ['-1000000000']
        ];
    }
    
    /**
     * @covers Phramework\Validate\Integer::fromJSON
     * @dataProvider validateSuccessProvider
     */
    public function testFromJSON($input, $expected)
    {
        $json = '{
            "type": "integer",
            "minimum" : -1000,
            "maximum" : 1000
        }';
        
        $object = Integer::fromJSON($json);
        
        $this->validateSuccess($object, $input, $expected);
    }

    /**
     * @covers Phramework\Validate\Integer::toJSON
     * @todo   Implement testToJSON().
     */
    public function testToJSON()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Phramework\Validate\Integer::__get
     * @todo   Implement test__get().
     */
    public function test__get()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Phramework\Validate\Integer::__set
     * @todo   Implement test__set().
     */
    public function test__set()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }
    
    private function validateSuccess(Integer $object, $input, $expected)
    {
        $return = $object->validate($input);
        
        $this->assertEquals(true, $return->status);
        $this->assertInternalType('integer', $return->value);
        $this->assertEquals($expected, $return->value);
    }
    
    /**
     * @covers Phramework\Validate\Integer::validate
     * @dataProvider validateSuccessProvider
     */
    public function testValidateSuccess($input, $expected)
    {
        $this->validateSuccess($this->object, $input, $expected);
        /*$return = $this->object->validate($input);
        
        $this->assertInternalType('integer', $return->value);
        $this->assertEquals($expected, $return->value);
        $this->assertEquals(true, $return->status);*/
    }
    
    
    /**
     * @covers Phramework\Validate\Integer::validate
     * @dataProvider validateFailureProvider
     */
    public function testValidateFailure($input)
    {
        $return = $this->object->validate($input);
        
        $this->assertEquals(false, $return->status);
        
        $this->markTestIncomplete(
                'Test Exclusive and multipleOf'
        );
    }
    
    

}
