<?php

namespace Phramework\Validate;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-10-05 at 22:11:07.
 */
class EmailTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Email
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Email(10, 30);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    public function validateSuccessProvider()
    {
        //input, expected
        return [
            ['nohponex@gmail.com'],
            ['nohponex_under@gmail.com'],
            ['nohponex@mail.co.uk']
        ];
    }

    public function validateFailureProvider()
    {
        //input
        return [
            ['string' =>  '100'],
            ['less than 10 characters' => 'nx@ma.il'],
            ['dotless' => 'nohponex@gmailcom'],
            ['longer' => 'nohponex_long_long_long_long_long@gmail.com'],
            ['without@' => 'dasdjs#sdads.fd'],
            ['number' => 124],
        ];
    }

    /**
     * @dataProvider validateSuccessProvider
     * @covers Phramework\Validate\Email::validate
     */
    public function testValidateSuccess($input)
    {
        $return = $this->object->validate($input);

        $this->assertInternalType('string', $return->value);
        $this->assertTrue($return->status);
    }

    /**
     * @dataProvider validateFailureProvider
     * @covers Phramework\Validate\Email::validate
     */
    public function testValidateFailure($input)
    {
        $return = $this->object->validate($input);

        $this->assertFalse($return->status);
    }

    /**
     * @covers Phramework\Validate\Email::getType
     */
    public function testGetType()
    {
        $this->assertEquals('email', $this->object->getType());
    }
}
